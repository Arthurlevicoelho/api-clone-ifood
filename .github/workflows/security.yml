name: security-api

on:
  push:
    branches:
      - develop

env:
  DEFECTDOJO_URL: https://50cf-2804-29b8-5004-8382-b30e-9893-1b68-4d59.ngrok-free.app
  DEFECTDOJO_API_VERSION: v2

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'


      - name: Run SpotBugs with FindSecBugs
        uses: advanced-security/spotbugs-findsecbugs-action@v1
        with:
          spotbugs_target: 'target/scala-2.13/classes'
          build_command: 'mvn compile test-compile'
          output_file: 'target/findsecbugs-report.xml'
          fail_on_error: 'false'
          spotbugs_version: '4.7.3'
          findsecbugs_version: '1.12.0'
          effort: 'max'
          confidence: 'medium'
          upload_sarif: 'true'
          sarif_file: 'target/findsecbugs.sarif'

      - name: Upload to DefectDojo
        if: always()
        run: |
          if [ -f "target/findsecbugs-report.xml" ]; then
            curl -v -X POST "${{ env.DEFECTDOJO_URL }}/api/${{ env.DEFECTDOJO_API_VERSION }}/import-scan/" \
              -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
              -F "scan_type=SpotBugs Scan" \
              -F "file=@target/findsecbugs-report.xml" \
              -F "product_name=api-clone-ifood" \
              -F "engagement_name=Automated-Scan-$(date +%Y%m%d)" \
              -F "auto_create_context=true"
          fi
         
      # - name: Enviar relatório para API
      #   run: |
      #     curl -v -X POST "https://50cf-2804-29b8-5004-8382-b30e-9893-1b68-4d59.ngrok-free.app/api/v2/import-scan/" \
      #       -H "Authorization: Token 6e482a959eefdd5e09dfe983f010a443c2616a74" \
      #       -F "scan_type=SpotBugs Scan" \
      #       -F "file=@/home/runner/work/api-clone-ifood/api-clone-ifood/target" \
      #       -F "product_name=api-clone-ifood" \
      #       -F "engagement_name=Teste-Manual-$(date +%Y%m%d)" \
      #       -F "auto_create_context=true"

      # SCA - OWASP Dependency-Check
      # - name: Run OWASP Dependency-Check
      #   run: |
      #     mvn dependency-check:check -Dformat=XML
      #     curl -X POST "https://50cf-2804-29b8-5004-8382-b30e-9893-1b68-4d59.ngrok-free.app/api/v2/import-scan/" \
      #       -H "Authorization: Token 6e482a959eefdd5e09dfe983f010a443c2616a74" \
      #       -F "scan_type=Dependency Check Scan" \
      #       -F "file=@/home/runner/work/api-clone-ifood/api-clone-ifood/target/dependency-check-report.xml" \
      #       -F "engagement=1"

      - name: Notify telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            O evento ${{ github.event_name }} realizou a pipeline ${{ github.workflow }}.
            *Repositorio*: [${{ github.repository }}](${{ github.repo.url }})  
            Quem realizou o commit: ${{ github.event.commits[0].author.name }}
            Mensagem do commit: ${{ github.event.commits[0].message }}.
            *Relatórios de segurança enviados para o DefectDojo*
